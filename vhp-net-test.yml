AWSTemplateFormatVersion: 2010-09-09
Description: Create a demo launch template
Parameters:
  testAMIid:
    Type: 'AWS::EC2::Image::Id'
  keypairName:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  instanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t3.small
      - t3.medium
      - t3.large
  environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
Mappings:
  amiMap:
    ca-central-1:
      amiId: ami-041a9937e9118f3f3
    us-east-1:
      amiId: ami-090fa75af13c156b4
Resources:
  vhpVPC:
      Type: 'AWS::EC2::VPC'
      Properties:
        CidrBlock: 10.0.0.0/16
        Tags:
          - Key: Name
            Value: !Sub '${environment}-vpc'

  publicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref vhpVPC
      AvailabilityZone: us-east-2a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicSubnet'

    DependsOn:
      - vhpVPC
  privateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref vhpVPC
      AvailabilityZone: us-east-2a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${environment}-privateSubnet'
    DependsOn:
      - vhpVPC

  vhpInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicInternetGateway'

  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref vhpInternetGateway
      VpcId: !Ref vhpVPC

  publicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref vhpVPC
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicRouteTable'

  publicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref vhpInternetGateway
    DependsOn:
      - GatewayToInternet
  publicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref publicRouteTable

  instanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: IAM role used for our Launch template demo session
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Tags:
        - Key: environment
          Value: !Ref environment

  instanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    DependsOn:
      - instanceRole
    Properties:
      Roles:
        - !Ref instanceRole

  testSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: allows HTTP and HTTPs traffic from the internet
      GroupName: !Sub '${environment}-pp-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 68.185.107.66/32
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-pp-sg'

  testLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - testSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: testAMIid
        InstanceType: !Ref instanceType
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        SecurityGroupIds:
          - !GetAtt testSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-pp'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  testEC2instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - testLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref testLaunchTemplate
        Version: !GetAtt testLaunchTemplate.DefaultVersionNumber
      SubnetId: !Ref publicSubnet

Outputs:
  testlaunchTemplateId:
    Value: !Ref testLaunchTemplate
    Export:
      Name: !Sub '${environment}-pp-lt-id'
