AWSTemplateFormatVersion: 2010-09-09
Description: Creates the VHP environment
Parameters:
#  webserverAMIid:
#    Type: 'AWS::EC2::Image::Id'
#  coreAMIid:
#    Type: 'AWS::EC2::Image::Id'
#  martAMIid:
#    Type: 'AWS::EC2::Image::Id'
#  servicesAMIid:
#    Type: 'AWS::EC2::Image::Id'
#  ppAMIid:
#    Type: 'AWS::EC2::Image::Id'

#  webserverEIP:
#    Description: Attach the static elastic IP Allocation ID
#    Type: String

  keypairName:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  instanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t3.small
      - t3.medium
      - t3.large
  environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
Mappings:
  amiMap:
    us-east-1:
      bastionHostAmiId: ami-0453709da2dd5b087
      ppAmiId: ami-018f5ccfff4fbb51d
      webserverAmiId: ami-018f5ccfff4fbb51d
      coreAmiId: ami-018f5ccfff4fbb51d
      martAmiId: ami-018f5ccfff4fbb51d
      servicesAmiId: ami-018f5ccfff4fbb51d
    us-east-2:
      bastionHostAmiId: ami-0453709da2dd5b087 
      ppAmiId: ami-036538d509a244cf1
      webserverAmiId: ami-057ccb05d2acc8c3d
      coreAmiId: ami-03127faf27ba03011
      martAmiId: ami-051f438fa2e21daba
      servicesAmiId: ami-0d14968c49ced30f4
Resources:
  vhpVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub '${environment}-vpc'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 50ec779e-ddb4-46fc-af41-7605dfad7e39
  publicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref vhpVPC
      #AvailabilityZone: us-east-2a
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicSubnet'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 6e673b4f-cecc-4f00-8e94-785d54df659c
    DependsOn:
      - vhpVPC
  privateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref vhpVPC
      #AvailabilityZone: us-east-2a
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${environment}-privateSubnet'
    DependsOn:
      - vhpVPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ddc0ad95-6ad8-4774-bcd2-6eb5506a7770
  vhpInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicInternetGateway'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ab02b05e-ac95-4c24-a3bc-d822c8dce62a
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref vhpInternetGateway
      VpcId: !Ref vhpVPC
    Metadata:
      'AWS::CloudFormation::Designer':
        id: fd0759ac-f317-494a-8f6e-9fbb13d150aa
  publicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref vhpVPC
      Tags:
        - Key: Name
          Value: !Sub '${environment}-publicRouteTable'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b453e08f-c160-469c-9f03-006c17cf36ea
  publicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref publicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref vhpInternetGateway
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 71cdcd19-ab5c-4da7-921a-2c938d545246
    DependsOn:
      - GatewayToInternet
  publicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref publicRouteTable
      ## NAT GATEWAY
  vhpNatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: NatPublicIP
    Properties: 
      SubnetId: !Ref publicSubnet
      AllocationId: !GetAtt NatPublicIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub '${environment}-natGateway'
      ## ELASTIC IP
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: vhpVPC
    Properties:
      Domain: vpc
  privateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref vhpVPC
      Tags:
        - Key: Name
          Value: !Sub '${environment}-privateRouteTable'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5202e4d2-2a33-4af7-ba08-62b5bf901ca2
  privateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref privateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref vhpNatGateway # this will eventually be a NAT gateway
    DependsOn:
      - GatewayToInternet
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 07f99466-a8da-427e-b252-50728d882b26
  privateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref privateSubnet
      RouteTableId: !Ref privateRouteTable
  instanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: IAM role used for our Launch template demo session
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Tags:
        - Key: environment
          Value: !Ref environment
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a2bc52ed-9b30-4625-8f47-e479d2dea29a
  instanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    DependsOn:
      - instanceRole
    Properties:
      Roles:
        - !Ref instanceRole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e695a0dd-4cc6-4cc5-8710-cbfea17d1d31

  bastionHostSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - vhpVPC
    Properties:
      GroupDescription: allows ssh from the bastion host to the private instances
      GroupName: !Sub '${environment}-bastion-host-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3434
          ToPort: 3437
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 68.185.107.66/32
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-bastion-host-sg'

  bastionHostLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - bastionHostSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - bastionHostAmiId
        #ImageId: ami-036538d509a244cf1
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.1.15
          SubnetId: !Ref publicSubnet
          Groups:
            - !Ref bastionHostSecurityGroup
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-bastion-host'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  bastionHostEC2:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - bastionHostLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref bastionHostLaunchTemplate
        Version: !GetAtt bastionHostLaunchTemplate.DefaultVersionNumber

  ppSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - vhpVPC
    Properties:
      GroupDescription: allows HTTP and HTTPs traffic from the internet
      GroupName: !Sub '${environment}-pp-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 68.185.107.66/32
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-pp-sg'

  ppLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - ppSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - ppAmiId
        #ImageId: ami-036538d509a244cf1
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.1.19
          SubnetId: !Ref publicSubnet
          Groups:
            - !Ref ppSecurityGroup
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-pp'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  ppEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - ppLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ppLaunchTemplate
        Version: !GetAtt ppLaunchTemplate.DefaultVersionNumber

  ppCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - ppEC2Instance
    Properties:
      AlarmDescription: CPU alarm for my instance
      AlarmActions:
      - Ref: "devEmailsTopic"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: "ppEC2Instance"

  ppStatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - ppEC2Instance
    Properties:
      AlarmDescription: Send an email when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: "devEmailsTopic"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: ppEC2Instance  

  webserverSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - ppSecurityGroup
    Properties:
      GroupDescription: allows HTTP and HTTPs traffic from the internet
      GroupName: !Sub '${environment}-webserver-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: '::/0'
        - IpProtocol: tcp
          FromPort: 4000
          ToPort: 4000
          SourceSecurityGroupId: !GetAtt ppSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !GetAtt bastionHostSecurityGroup.GroupId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-webserver-sg'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b350e638-e90e-4208-9216-112745c46382
  webserverLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - webserverSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - webserverAmiId
        #ImageId: ami-057ccb05d2acc8c3d
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.1.212
          SubnetId: !Ref publicSubnet 
          Groups:
            - !Ref webserverSecurityGroup
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-webserver'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  webserverEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - webserverLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref webserverLaunchTemplate
        Version: !GetAtt webserverLaunchTemplate.DefaultVersionNumber

#  webserverEIPassociation:
#    Type: AWS::EC2::EIPAssociation
#    Properties:
#      AllocationId: webserverEIP
#      InstanceId: webserverEC2Instance

  devEmailsTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: "Johnw@vogelheating.com"
        Protocol: email
#      - Endpoint: "ChristianV@vogelheating.com"
#        Protocol: email

  webserverCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - webserverEC2Instance
    Properties:
      AlarmDescription: CPU alarm for my instance
      AlarmActions:
      - Ref: "devEmailsTopic"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: "webserverEC2Instance"

  webserverStatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - webserverEC2Instance
    Properties:
      AlarmDescription: Send an email when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: "devEmailsTopic"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: webserverEC2Instance          
       
  coreSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - webserverSecurityGroup
    Properties:
      GroupDescription: allows ssh from vogel network
      GroupName: !Sub '${environment}-core-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          SourceSecurityGroupId: !GetAtt ppSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !GetAtt bastionHostSecurityGroup.GroupId
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 7050
          ToPort: 7050
          CidrIp: 0.0.0.0/0
          Description: change source to services sg
        - IpProtocol: tcp
          FromPort: 7000
          ToPort: 7000
          CidrIp: 0.0.0.0/0
          Description: change source to services sg
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
          Description: change source to mart sg
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-core-sg'
  coreLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - coreSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - coreAmiId
        #ImageId: ami-03127faf27ba03011
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.2.212
          SubnetId: !Ref privateSubnet 
          Groups:
            - !Ref coreSecurityGroup
          AssociatePublicIpAddress: false
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-core'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  coreEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - coreLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref coreLaunchTemplate
        Version: !GetAtt coreLaunchTemplate.DefaultVersionNumber

  coreCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - coreEC2Instance
    Properties:
      AlarmDescription: CPU alarm for my instance
      AlarmActions:
      - Ref: "devEmailsTopic"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: "coreEC2Instance"

  coreStatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - coreEC2Instance
    Properties:
      AlarmDescription: Send an email when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: "devEmailsTopic"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: coreEC2Instance          

  martSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - coreSecurityGroup
    Properties:
      GroupDescription: allows ssh from vogel network
      GroupName: !Sub '${environment}-mart-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !GetAtt bastionHostSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !GetAtt coreSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-mart-sg'
  martLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - martSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - martAmiId
        #ImageId: ami-051f438fa2e21daba
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.2.116
          SubnetId: !Ref privateSubnet
          Groups:
            - !Ref martSecurityGroup
          AssociatePublicIpAddress: false
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-mart'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  martEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - martLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref martLaunchTemplate
        Version: !GetAtt martLaunchTemplate.DefaultVersionNumber

  martCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - martEC2Instance
    Properties:
      AlarmDescription: CPU alarm for my instance
      AlarmActions:
      - Ref: "devEmailsTopic"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: "martEC2Instance"

  martStatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - martEC2Instance
    Properties:
      AlarmDescription: Send an email when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: "devEmailsTopic"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: martEC2Instance          

  servicesSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn:
      - martSecurityGroup
    Properties:
      GroupDescription: allows ssh from vogel network
      GroupName: !Sub '${environment}-services-sg'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !GetAtt bastionHostSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 7050
          ToPort: 7050
          SourceSecurityGroupId: !GetAtt coreSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 7000
          ToPort: 7000
          SourceSecurityGroupId: !GetAtt coreSecurityGroup.GroupId
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      VpcId: !Ref vhpVPC
      Tags:
        - Key: environment
          Value: !Ref environment
        - Key: Name
          Value: !Sub '${environment}-services-sg'
  servicesLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    DependsOn:
      - instanceProfile
      - servicesSecurityGroup
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              Iops: 3000
              Throughput: 125
              VolumeSize: 8
              VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Arn: !GetAtt instanceProfile.Arn
        KeyName: !Ref keypairName
        UserData: !Base64 '80'
        ImageId: !FindInMap 
          - amiMap
          - !Ref 'AWS::Region'
          - servicesAmiId
        #ImageId: ami-0d14968c49ced30f4
        InstanceType: !Ref instanceType
        NetworkInterfaces:
        - DeviceIndex: 0
          PrivateIpAddress: 10.0.2.157
          SubnetId: !Ref privateSubnet
          Groups:
            - !Ref servicesSecurityGroup
          AssociatePublicIpAddress: false
        MetadataOptions:
          HttpTokens: required
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub '${environment}-vhp-services'
              - Key: environment
                Value: !Ref environment
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: environment
              Value: !Ref environment
  servicesEC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn:
      - servicesLaunchTemplate
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref servicesLaunchTemplate
        Version: !GetAtt servicesLaunchTemplate.DefaultVersionNumber

  servicesCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - servicesEC2Instance
    Properties:
      AlarmDescription: CPU alarm for my instance
      AlarmActions:
      - Ref: "devEmailsTopic"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: "servicesEC2Instance"

  servicesStatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
      - servicesEC2Instance
    Properties:
      AlarmDescription: Send an email when instance status check fails for 15
        consecutive minutes.
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: '60'
      EvaluationPeriods: '15'
      ComparisonOperator: GreaterThanThreshold
      Threshold: '0'
      AlarmActions:
      - Ref: "devEmailsTopic"
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: servicesEC2Instance                

Outputs:
  webserverlaunchTemplateId:
    Value: !Ref webserverLaunchTemplate
    Export:
      Name: !Sub '${environment}-webserver-lt-id'
  corelaunchTemplateId:
    Value: !Ref coreLaunchTemplate
    Export:
      Name: !Sub '${environment}-core-lt-id'
  martlaunchTemplateId:
    Value: !Ref martLaunchTemplate
    Export:
      Name: !Sub '${environment}-mart-lt-id'
  serviceslaunchTemplateId:
    Value: !Ref servicesLaunchTemplate
    Export:
      Name: !Sub '${environment}-services-lt-id'
  pplaunchTemplateId:
    Value: !Ref ppLaunchTemplate
    Export:
      Name: !Sub '${environment}-pp-lt-id'
Metadata:
  'AWS::CloudFormation::Designer':
    b350e638-e90e-4208-9216-112745c46382:
      size:
        width: 60
        height: 60
      position:
        x: 590
        'y': 330
      z: 1
      embeds: []
      iscontainedinside:
        - 50ec779e-ddb4-46fc-af41-7605dfad7e39
    a2bc52ed-9b30-4625-8f47-e479d2dea29a:
      size:
        width: 60
        height: 60
      position:
        x: 490
        'y': 150
      z: 1
      embeds: []
    e695a0dd-4cc6-4cc5-8710-cbfea17d1d31:
      size:
        width: 60
        height: 60
      position:
        x: 590
        'y': 150
      z: 1
      embeds: []
    b7f3b730-92cb-4fff-b090-12059d4044bc:
      size:
        width: 60
        height: 60
      position:
        x: 590
        'y': 240
      z: 1
      embeds: []
    4e6cbe1c-308a-4524-ac76-80d58285d6cd:
      size:
        width: 60
        height: 60
      position:
        x: 690
        'y': 240
      z: 1
      embeds: []
      iscontainedinside:
        - 6e673b4f-cecc-4f00-8e94-785d54df659c
    ab02b05e-ac95-4c24-a3bc-d822c8dce62a:
      size:
        width: 60
        height: 60
      position:
        x: 1100
        'y': 620
      z: 1
      embeds: []
    50ec779e-ddb4-46fc-af41-7605dfad7e39:
      size:
        width: 150
        height: 150
      position:
        x: 1050
        'y': 400
      z: 1
      embeds: []
    5202e4d2-2a33-4af7-ba08-62b5bf901ca2:
      size:
        width: 150
        height: 150
      position:
        x: 1300
        'y': 400
      z: 1
      embeds: []
    b453e08f-c160-469c-9f03-006c17cf36ea:
      size:
        width: 150
        height: 150
      position:
        x: 810
        'y': 400
      z: 1
      embeds: []
    fd0759ac-f317-494a-8f6e-9fbb13d150aa:
      source:
        id: ab02b05e-ac95-4c24-a3bc-d822c8dce62a
      target:
        id: 50ec779e-ddb4-46fc-af41-7605dfad7e39
    07f99466-a8da-427e-b252-50728d882b26:
      size:
        width: 60
        height: 60
      position:
        x: 1350
        'y': 620
      z: 1
      embeds: []
      dependson:
        - fd0759ac-f317-494a-8f6e-9fbb13d150aa
    71cdcd19-ab5c-4da7-921a-2c938d545246:
      size:
        width: 60
        height: 60
      position:
        x: 860
        'y': 620
      z: 1
      embeds: []
      dependson:
        - fd0759ac-f317-494a-8f6e-9fbb13d150aa
    ddc0ad95-6ad8-4774-bcd2-6eb5506a7770:
      size:
        width: 150
        height: 150
      position:
        x: 1310
        'y': 210
      z: 1
      embeds: []
    6e673b4f-cecc-4f00-8e94-785d54df659c:
      size:
        width: 150
        height: 150
      position:
        x: 800
        'y': 200
      z: 1
      embeds: []
